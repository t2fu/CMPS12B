/*
 * 
 * 
 * 
 * 
 */ 
import java.io.*;
import java.util.*;
class FileReverse{
  
 public static void main(String[] args) throws IOException{
   
   Scanner in = null;
   PrintWriter out = null;
   String line = null;
   String[] token = null;
   int i, n, lineNumber = 0;
 // check number of command line arguments is at least 2
   if(args.length < 2){
     System.out.println("Usage: FileCopy <input file> <output file>");
     System.exit(1);
 }
 // open files
   in = new Scanner(new File(args[0]));
   out = new PrintWriter(new FileWriter(args[1]));
 // read lines from in, extract and print tokens from each line
 while( in.hasNextLine() ){
   lineNumber++;
 // trim leading and trailing spaces, then add one trailing space so
 // split works on blank lines
   line = in.nextLine().trim() + " ";
 // split line around white space
   token = line.split("\\s+");
 // print out tokens
   n = token.length;
   //out.println("Line " + lineNumber + " contains " + n + " tokens:");
   for(i=0; i<n; i++){
     out.println(" "+stringReverse(token[i], token[i].length()));
 }
}
 // close files
 in.close();
 out.close();
   
 }
 
 public static String stringReverse(String s, int n){//This method will copy the leftmost n elements in X[] into the rightmost n positions in Y[] in reverse order 
   
  char [] c = new char [s.length()];
  char [] d = new char [s.length()];
  for(int i=0;i<s.length(); i++){
    
   c[i] = s.charAt(i);
   
  }
  
  if(n > 0){ //If there still is elements left in the array that didn't get copy
    
    d[s.length()-n]= c[n-1]; //Copying the nth element from the left in X[] into the nth element from the right in Y[]
    stringReverse(s, n-1); //Call the method itself again without includes the elements that already got copied
         
      }
  
  s = String.valueOf(d);
    
  return s;
}
 
}